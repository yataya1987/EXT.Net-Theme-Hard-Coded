@{
    var data = new object[]
    {
        new object[] { "3m Co", 71.72, 0.02, 0.03 },
        new object[] { "Alcoa Inc", 29.01, 0.42, 1.47 },
        new object[] { "Altria Group Inc", 83.81, 0.28, 0.34 },
        new object[] { "American Express Company", 52.55, 0.01, 0.02 },
        new object[] { "American International Group, Inc.", 64.13, 0.31, 0.49 },
        new object[] { "AT&T Inc.", 31.61, -0.48, -1.54 },
        new object[] { "Boeing Co.", 75.43, 0.53, 0.71 },
        new object[] { "Caterpillar Inc.", 67.27, 0.92, 1.39 },
        new object[] { "Citigroup, Inc.", 49.37, 0.02, 0.04 },
        new object[] { "E.I. du Pont de Nemours and Company", 40.48, 0.51, 1.28 },
        new object[] { "Exxon Mobil Corp", 68.1, -0.43, -0.64 },
        new object[] { "General Electric Company", 34.14, -0.08, -0.23 },
        new object[] { "General Motors Corporation", 30.27, 1.09, 3.74 },
        new object[] { "Hewlett-Packard Co.", 36.53, -0.03, -0.08 },
        new object[] { "Honeywell Intl Inc", 38.77, 0.05, 0.13 },
        new object[] { "Intel Corporation", 19.88, 0.31, 1.58 },
        new object[] { "International Business Machines", 81.41, 0.44, 0.54 },
        new object[] { "Johnson & Johnson", 64.72, 0.06, 0.09 },
        new object[] { "JP Morgan & Chase & Co", 45.73, 0.07, 0.15 },
        new object[] { "McDonald\"s Corporation", 36.76, 0.86, 2.40 },
        new object[] { "Merck & Co., Inc.", 40.96, 0.41, 1.01 },
        new object[] { "Microsoft Corporation", 25.84, 0.14, 0.54 },
        new object[] { "Pfizer Inc", 27.96, 0.4, 1.45 },
        new object[] { "The Coca-Cola Company", 45.07, 0.26, 0.58 },
        new object[] { "The Home Depot, Inc.", 34.64, 0.35, 1.02 },
        new object[] { "The Procter & Gamble Company", 61.91, 0.01, 0.02 },
        new object[] { "United Technologies Corporation", 63.26, 0.55, 0.88 },
        new object[] { "Verizon Communications", 35.57, 0.39, 1.11 },
        new object[] { "Wal-Mart Stores, Inc.", 45.45, 0.73, 1.63 }
    };
}

@(
    Html.X().DesktopModuleProxy()
        .Module(
            Html.X().DesktopModule()
                .ModuleID("grid-win")
                .Shortcut(
                    Html.X().DesktopShortcut()
                        .Name("Grid Window")
                        .IconCls("x-grid-shortcut")
                        .SortIndex(1)
                )
                .Launcher(
                    Html.X().MenuItem()
                        .Text("Grid Window")
                        .Icon(Icon.Table)
                )
                .Window(
                    Html.X().Window()
                        .Icon(Icon.Table)
                        .Width(740)
                        .Height(480)
                        .Layout(LayoutType.Fit)
                        .Title("Grid Window")
                        .TopBarItem(
                            Html.X().Button()
                                .Text("Add Something")
                                .Icon(Icon.Add)
                                .ToolTip("Add a new row"),

                            Html.X().ToolbarSeparator(),

                            Html.X().Button()
                                .Text("Options")
                                .Icon(Icon.Plugin),

                            Html.X().ToolbarSeparator(),

                            Html.X().Button()
                                .Text("Remove Something")
                                .Icon(Icon.Decline)
                                .ToolTip("Remove the selected item")
                        )
                        .Items(
                            Html.X().GridPanel()
                                .Border(false)
                                .Store(
                                    Html.X().Store()
                                        .DataSource(data)
                                        .Model(
                                            Html.X().Model()
                                                .Fields(
                                                    Html.X().ModelField().Name("Company"),
                                                    Html.X().ModelField().Name("Price").Type(ModelFieldType.Float),
                                                    Html.X().ModelField().Name("Change").Type(ModelFieldType.Float),
                                                    Html.X().ModelField().Name("PctChange").Type(ModelFieldType.Float)
                                                )
                                        )
                                        .Reader(
                                            Html.X().ArrayReader()
                                        )
                                )
                                .ColumnModel(
                                    Html.X().RowNumbererColumn(),

                                    Html.X().Column()
                                        .Text("Company")
                                        .Flex(1)
                                        .DataIndex("Company"),

                                    Html.X().Column()
                                        .Text("Price")
                                        .Width(70)
                                        .DataIndex("Price")
                                        .Renderer(RendererFormat.UsMoney),

                                    Html.X().Column()
                                        .Text("Change")
                                        .Width(70)
                                        .DataIndex("Change"),

                                    Html.X().Column()
                                        .Text("% Change")
                                        .Width(70)
                                        .DataIndex("PctChange")
                                )
                        )
                )
        )
)