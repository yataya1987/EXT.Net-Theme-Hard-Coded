@{
    ViewBag.Title = "History - Ext.NET MVC Examples";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section headtag
{
    <script>
        if (window.parent.frames.length > 0) {
            window.open(window.location.pathname);
            window.location = "@Url.Content("/Areas/Miscellaneous_History/Content/Warning.html")";
        }

        var change = function (token) {
            if (token) {
                var parts = token.split(":"),
                    tabPanel = Ext.getCmp(parts[0]),
                    tabId = parts[1];

                if (tabPanel.id == "TabPanel2") {
                    App.TabPanel1.setActiveTab(0);
                }

                tabPanel.show();
                tabPanel.setActiveTab(tabId);
            } else {
                // This is the initial default state.  Necessary if you navigate starting from the
                // page without any existing history token params and go back to the start state.
                App.TabPanel1.setActiveTab(0);
                App.TabPanel2.setActiveTab(0);
            }
        };
    </script>
}

@section example
{
    <p>Please review this example in the separate browser's window because the example can conflicts with History control of the Examples Explorer</p>

    @X.History().ID("History1").Listeners(l => l.Change.Fn = "change")

    @(X.TabPanel()
        .ID("TabPanel1")
        .Height(300)
        .Width(600)
        .ActiveTabIndex(0)
        .Items(i =>
        {
            i.Add(X.Panel()
                .ID("Tab1")
                .Title("Tab1")
                .Layout(LayoutType.Fit)
                .Items(X.TabPanel()
                    .ID("TabPanel2")
                    .ActiveTabIndex(0)
                    .TabPosition(TabPosition.Bottom)
                    .Items(ti =>
                    {
                        ti.Add(X.Panel().ID("SubTab1").Title("Sub-tab 1"));
                        ti.Add(X.Panel().ID("SubTab2").Title("Sub-tab 2"));
                        ti.Add(X.Panel().ID("SubTab3").Title("Sub-tab 3"));
                    })
                    .Listeners(l => l.TabChange.Handler = "Ext.History.add(this.id + ':' + newTab.id);")
                )
            );

            i.Add(X.Panel().ID("Tab2").Title("Tab 2"));
            i.Add(X.Panel().ID("Tab3").Title("Tab 3"));
            i.Add(X.Panel().ID("Tab4").Title("Tab 4"));
            i.Add(X.Panel().ID("Tab5").Title("Tab 5"));
        })
        .Listeners(l => l.TabChange.Handler = "if (newTab.id != 'Tab1') {Ext.History.add(this.id + ':' + newTab.id);}")
    )
}
