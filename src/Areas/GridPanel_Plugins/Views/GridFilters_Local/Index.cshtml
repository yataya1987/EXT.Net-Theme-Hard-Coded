@{
    ViewBag.Title = "GridPanel with Local Filtering, Sorting and Paging - Ext.NET MVC Examples";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section headtag
{
    <script>
        var getFilters = function() {
            var out = [],
                filters = this.up('grid').store.getFilters().items,
                length = filters.length,
                i;

            for (i = 0; i < length; i++) {
                out[i] = filters[i].serialize();
            }

            Ext.Msg.alert('Filters', Ext.encode(out));
        };
    </script>
}

@section example
{
    <h1>GridPanel with Local Filtering, Sorting and Paging</h1>
    <p>Please see column header menu for apllying filters</p>

    @(X.Window()
        .Width(700)
        .Height(400)
        .Closable(false)
        .Title("Example")
        .Layout(LayoutType.Fit)
        .Items(
            X.GridPanel()
                .Border(false)
                .Store(
                    X.Store()
                        .DataSource(Model)
                        .PageSize(10)
                        .Model(
                            X.Model()
                                .IDProperty("Id")
                                .Fields(
                                    X.ModelField().Name("Id").Type(ModelFieldType.Int),
                                    X.ModelField().Name("Company").Type(ModelFieldType.String),
                                    X.ModelField().Name("Price").Type(ModelFieldType.Float),
                                    X.ModelField().Name("Date").Type(ModelFieldType.Date),
                                    X.ModelField().Name("Size").Type(ModelFieldType.String),
                                    X.ModelField().Name("Visible").Type(ModelFieldType.Boolean)
                                )
                        )
                        .Sorters(
                            X.DataSorter().Property("Company").Direction(Ext.Net.SortDirection.ASC)
                        )
                )
                .ColumnModel(
                    X.Column().Text("ID").DataIndex("Id").Filter(X.NumberFilter()),

                    X.Column().Text("Company").ID("CompanyColumn").DataIndex("Company").Filter(X.StringFilter()),

                    X.Column().Text("Price").DataIndex("Price").Renderer(RendererFormat.UsMoney).Filter(X.NumberFilter()),

                    X.DateColumn()
                        .Text("Date")
                        .DataIndex("Date")
                        .Align(ColumnAlign.Center)
                        .Format("yyyy-MM-dd")
                        .Filter(X.DateFilter().DatePickerOptions(picker => picker.TodayText = "Now")),

                    X.Column()
                        .Text("Size")
                        .DataIndex("Size")
                        .Filter(X.ListFilter().Options("extra small,small,medium,large,extra large")),

                    X.BooleanColumn()
                        .Text("Visible")
                        .DataIndex("Visible")
                        .Align(ColumnAlign.Center)
                        .TrueText("Yes")
                        .FalseText("No")
                        .Filter(X.BooleanFilter())
                )
                .Plugins(X.GridFilters())
                .BottomBar(
                    X.PagingToolbar()
                        .HideRefresh(true)
                        .Items(
                            X.Button()
                                .Text("Find '3m Co'")
                                .DirectClickAction("SetFilter")
                                //.Handler("var f = this.up('grid').filters.getFilter('Company'); f.setValue('3m Co'); f.setActive(true);")
                                ,
                            X.Button()
                                .Text("All Filters")
                                .ToolTip("Get Filters of Grid")
                                .Handler("getFilters"),
                            X.Button()
                                .Text("Clear Filters")
                                .Handler("this.up('grid').filters.clearFilters();")
                        )
                )
        )
    )
}
