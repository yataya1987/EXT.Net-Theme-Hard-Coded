@model System.Collections.IEnumerable

@{
    ViewBag.Title = "Basic Row Command - Ext.NET MVC Examples";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
}

@section headtag
{
    <script>
        var template = '<span style="color:{0};">{1}</span>';

        var change = function (value) {
            return Ext.String.format(template, (value > 0) ? "green" : "red", value);
        };

        var pctChange = function (value) {
            return Ext.String.format(template, (value > 0) ? "green" : "red", value + "%");
        };
    </script>
}

@section example
{
    <h1>Basic Row Command</h1>

    <br />

    <h3>Icons with tips</h3>

    @(Html.X().Store()
        .ID("Store1")
        .Model(Html.X().Model()
            .Fields(
                new ModelField("company"),
                new ModelField("price", ModelFieldType.Float),
                new ModelField("change", ModelFieldType.Float),
                new ModelField("pctChange", ModelFieldType.Float),
                new ModelField("lastChange", ModelFieldType.Date, "M/d hh:mmtt")
            )
        )
        .DataSource(Model)
    )

    @(Html.X().GridPanel()
        .Title("Icons with tips")
        .Width(750)
        .Height(420)
        .StoreID("Store1")
        .ColumnModel(
            Html.X().Column()
                .Text("Company")
                .DataIndex("company")
                .Flex(1),
            Html.X().Column()
                .Text("Price")
                .DataIndex("price")
                .Width(75)
                .Renderer(RendererFormat.UsMoney),
            Html.X().Column()
                .Text("Change")
                .DataIndex("change")
                .Width(75)
                .Renderer("change"),
            Html.X().Column()
                .Text("Change")
                .DataIndex("pctChange")
                .Width(75)
                .Renderer("pctChange"),
            Html.X().DateColumn()
                .Text("Last Updated")
                .Width(120)
                .DataIndex("lastChange"),
            Html.X().CommandColumn()
                .Width(70)
                .Commands(
                    Html.X().GridCommand()
                        .CommandName("Delete")
                        .Icon(Icon.Delete)
                        .ToolTip(tt => tt.Text = "Delete"),

                    Html.X().GridCommand()
                        .CommandName("Edit")
                        .Icon(Icon.NoteEdit)
                        .ToolTip(tt => tt.Text = "Edit")
                )
                .Listeners(ls => ls.Command.Handler = "Ext.Msg.alert(command, record.data.company);")
        )
    )

    <br />

    <h3>Icons with text</h3>

    @(Html.X().GridPanel()
        .Title("Icons with text")
        .Width(750)
        .Height(420)
        .StoreID("Store1")
        .ColumnModel(
            Html.X().Column()
                .Text("Company")
                .DataIndex("company")
                .Flex(1),
            Html.X().Column()
                .Text("Price")
                .DataIndex("price")
                .Width(75)
                .Renderer(RendererFormat.UsMoney),
            Html.X().Column()
                .Text("Change")
                .DataIndex("change")
                .Width(75)
                .Renderer("change"),
            Html.X().Column()
                .Text("Change")
                .DataIndex("pctChange")
                .Width(75)
                .Renderer("pctChange"),
            Html.X().DateColumn()
                .Text("Last Updated")
                .Width(120)
                .DataIndex("lastChange"),
            Html.X().CommandColumn()
                .Width(160)
                .Commands(
                    Html.X().GridCommand()
                        .CommandName("Delete")
                        .Icon(Icon.Delete)
                        .Text("Delete"),

                    Html.X().GridCommand()
                        .CommandName("Edit")
                        .Icon(Icon.NoteEdit)
                        .Text("Edit")
                )
                .Listeners(ls => ls.Command.Handler = "Ext.Msg.alert(command, record.data.company);")
        )
    )

    <br />

    <h3>Stand Out buttons</h3>

    @(Html.X().GridPanel()
        .Title("Stand Out buttons")
        .Width(750)
        .Height(420)
        .StoreID("Store1")
        .ColumnModel(
            Html.X().Column()
                .Text("Company")
                .DataIndex("company")
                .Flex(1),
            Html.X().Column()
                .Text("Price")
                .DataIndex("price")
                .Width(75)
                .Renderer(RendererFormat.UsMoney),
            Html.X().Column()
                .Text("Change")
                .DataIndex("change")
                .Width(75)
                .Renderer("change"),
            Html.X().Column()
                .Text("Change")
                .DataIndex("pctChange")
                .Width(75)
                .Renderer("pctChange"),
            Html.X().DateColumn()
                .Text("Last Updated")
                .Width(120)
                .DataIndex("lastChange"),
            Html.X().CommandColumn()
                .Width(70)
                .Commands(
                    Html.X().GridCommand()
                        .CommandName("Delete")
                        .Icon(Icon.Delete)
                        .StandOut(true)
                        .ToolTip(tt => tt.Text = "Delete"),

                    Html.X().GridCommand()
                        .CommandName("Edit")
                        .Icon(Icon.NoteEdit)
                        .StandOut(true)
                        .ToolTip(tt => tt.Text = "Edit")
                )
                .Listeners(ls => ls.Command.Handler = "Ext.Msg.alert(command, record.data.company);")
        )
    )
}
