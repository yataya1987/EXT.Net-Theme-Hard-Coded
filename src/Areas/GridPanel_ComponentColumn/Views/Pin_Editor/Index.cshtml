@model System.Collections.IEnumerable

@{
    ViewBag.Title = "ComponentColumn Pin Editor - Ext.NET MVC Examples";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
}

@section headtag
{
    <script>
        var pinEditors = function (btn, pressed) {
            var columnConfig = btn.column,
                column = columnConfig.column;

            if (pressed) {
                column.pinOverComponent();
                column.showComponent(columnConfig.record, true);
            } else {
                column.unpinOverComponent();
                column.hideComponent(true);
            }
        };
    </script>
}

@section example
{
    <h1>ComponentColumn as Pin Editor</h1>

    @(Html.X().GridPanel()
        .Title("ComponentColumn Pin Editor")
        .Width(600)
        .Height(300)
        .Store(Html.X().Store()
            .Model(Html.X().Model()
                .Fields(
                    new ModelField("IntField", ModelFieldType.Int),
                    new ModelField("ComboField", ModelFieldType.Int),
                    new ModelField("TextField", ModelFieldType.String),
                    new ModelField("DateField", ModelFieldType.Date)
                )
            )
            .DataSource(Model)
        )
        .ColumnModel(
            Html.X().ComponentColumn()
                .Editor(true)
                .OverOnly(true)
                .Pin(true)
                .DataIndex("IntField")
                .Flex(1)
                .Text("Integer")
                .Component(Html.X().NumberField()),

            Html.X().ComponentColumn()
                .Editor(true)
                .OverOnly(true)
                .Pin(true)
                .DataIndex("ComboField")
                .Flex(1)
                .Text("ComboBox")
                .Component(Html.X().ComboBox()
                    .Items(
                        new ListItem("Item 1", 1),
                        new ListItem("Item 2", 2),
                        new ListItem("Item 3", 3),
                        new ListItem("Item 4", 4),
                        new ListItem("Item 5", 5),
                        new ListItem("Item 6", 6),
                        new ListItem("Item 7", 7),
                        new ListItem("Item 8", 8),
                        new ListItem("Item 9", 9)
                    )
                ),

            Html.X().ComponentColumn()
                .Editor(true)
                .OverOnly(true)
                .Pin(true)
                .DataIndex("TextField")
                .Flex(1)
                .Text("Text")
                .Component(Html.X().TextField()),

            Html.X().ComponentColumn()
                .Editor(true)
                .OverOnly(true)
                .Pin(true)
                .DataIndex("DateField")
                .Flex(1)
                .Text("Date")
                .Renderer(new Renderer()
                    {
                        Format = RendererFormat.Date,
                        FormatArgs = new string[] { "'d/m/Y'" }
                    })
                .Component(Html.X().DateField().Format("dd/MM/yyyy")),

            Html.X().ComponentColumn()
                .Width(25)
                .PinAllColumns(false)
                .AutoWidthComponent(false)
                .OverOnly(true)
                .Component(Html.X().Button()
                    .ToolTip("Pin editors")
                    .Icon(Icon.Pencil)
                    .AllowDepress(true)
                    .EnableToggle(true)
                    .Listeners(ls => ls.Toggle.Fn = "pinEditors")
                )
        )
    )
}
